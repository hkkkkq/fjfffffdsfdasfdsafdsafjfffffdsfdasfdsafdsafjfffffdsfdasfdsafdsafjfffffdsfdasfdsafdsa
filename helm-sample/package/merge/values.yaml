# Default values for merge
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

##=(Summary)================================================================================###
##
## Helm Chart - [Merge Package]
##   - version: 1.0.0
##   - createDate: 2019.05.15
##   - modifiedDate: 2019.05.15
##   - description:
##     - (2019.05.15 1.0.0) : 최초 작성
##
##=========================================================================================###

##=(Description)===========================================================================###
##
## helm을 사용하지 않는 기존 패턴에서 helm 으로 전환하기 위한 형태의 package.
## 기존에 사용하던 yaml manifest를 그대로 적용가능함.
##
##=========================================================================================###


##=(Service Values 작성영역)===============================================================###
## services values 작성영역
##
## name: 작성명칭
## tag: 배포 이미지 버전과 동일
## port: 기본 포트는 80. Pod에서 8080으로 지정되어있는 경우, Service에서 80으로 구성함.
## ----------                 -----------------------------------                ---------- ##
## ----------                 -----------------------------------                ---------- ##
services:
  - name: be-auth
    tag: 1.0.0
    type: ClusterIP
    port: 80 
  - name: be-collect
    tag: 1.0.0
    type: ClusterIP
    port: 80 
  - name: be-common
    tag: 1.0.0
    type: ClusterIP
    port: 80 
  - name: be-pay
    tag: 1.0.0
    type: ClusterIP
    port: 80 
  - name: fe-chat
    tag: 1.0.0
    type: ClusterIP
    port: 80 
  - name: fe-web
    tag: 1.0.0
    type: ClusterIP
    port: 80 
##=========================================================================================###




##=(Deployments Values 작성영역)===========================================================###
## deployments values 작성영역
##
## 기존의 작성 형태를 그대로 사용 가능 함.
## ----------                 -----------------------------------                ---------- ##
## ----------                 -----------------------------------                ---------- ##
deployments:
  - replicaCount: 1
    name: be-auth
    version: 1.0.0
    spec:
      hostAliases:
      - ip: "172.31.30.238"
        hostnames:
        - "int-in.tbapi.kt.com"
      - ip: "172.31.30.33"
        hostnames:
        - "cus-in.tbapi.kt.com"
      - ip: "172.31.30.32"
        hostnames:
        - id.tbapi.kt.com
      containers:
      - name: be-auth
        image: docker-registry.default.svc.cluster.local:5000/dev-dtplatform/dt-be-auth:latest
        imagePullPolicy: "Always"
        ports:
          - name: http
            containerPort: 8080
        env:
          - name: spring.profiles.active
            value: dev
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DB_PWD
            valueFrom:
              secretKeyRef:
                name: vivaldi-secret
                key: DB_PWD
        volumeMounts:
        - mountPath: /var/log/LAMP/
          name: lamp-volume
        - mountPath: /etc/localtime
          name: timezone-config
        securityContext:
          privileged: true
        livenessProbe:
          httpGet:
            path: /api/be/auth/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/be/auth/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "1250Mi"
          limits:
            memory: "1250Mi"
      nodeSelector:
        ktis-node: "true"
      volumes:
      - name: lamp-volume
        hostPath:
          # directory location on host
          path: /var/log/vivaldi/LAMP/
          # this field is optional
          type: DirectoryOrCreate
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
        name: timezone-config

  - replicaCount: 1
    name: be-collect
    version: 1.0.0
    spec:
      hostAliases:
      - ip: "172.31.30.238"
        hostnames:
        - "int-in.tbapi.kt.com"
      - ip: "172.31.30.33"
        hostnames:
        - "cus-in.tbapi.kt.com"
      - ip: "172.31.30.32"
        hostnames:
        - id.tbapi.kt.com
      containers:
      - name: be-collect
        image: docker-registry.default.svc.cluster.local:5000/dev-dtplatform/dt-be-collect:latest
        imagePullPolicy: "Always"
        ports:
         - name: http
           containerPort: 8080
        env:
         - name: spring.profiles.active
           value: dev
         - name: NODE_IP
           valueFrom:
             fieldRef:
               fieldPath: status.hostIP
         - name: DB_PWD
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: DB_PWD
        volumeMounts:
        - mountPath: /var/log/LAMP/
          name: lamp-volume
        - mountPath: /etc/localtime
          name: timezone-config
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "1250Mi"
          limits:
            memory: "1250Mi"
      nodeSelector:
        ktis-node: "true"
      volumes:
      - name: lamp-volume
        hostPath:
          # directory location on host
          path: /var/log/vivaldi/LAMP
          # this field is optional
          type: DirectoryOrCreate
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
        name: timezone-config

  - replicaCount: 1
    name: be-common
    version: 1.0.0
    spec:
      hostAliases:
      - ip: "172.31.30.238"
        hostnames:
        - "int-in.tbapi.kt.com"
      - ip: "172.31.30.33"
        hostnames:
        - "cus-in.tbapi.kt.com"
      - ip: "172.31.30.32"
        hostnames:
        - id.tbapi.kt.com
      containers:
      - name: be-common
        image: docker-registry.default.svc.cluster.local:5000/dev-dtplatform/dt-be-common:latest
        imagePullPolicy: "Always"
        ports:
         - name: http
           containerPort: 8080
        env:
         - name: spring.profiles.active
           value: dev
         - name: CERT_SDP_CPID
           value:  KTOM2002
         - name: NODE_IP
           valueFrom:
             fieldRef:
               fieldPath: status.hostIP
         - name: DB_PWD
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: DB_PWD
         - name: SDP_ACCOUNT_CUS1_PW
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: SDP_ACCOUNT_CUS1_PW
         - name: SDP_ACCOUNT_CUS2_PW
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: SDP_ACCOUNT_CUS2_PW
         - name: CERT_CREDIT_SITE_PWD
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: CERT_CREDIT_SITE_PWD
         - name: CERT_PUBLIC_SITEMINA
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: CERT_PUBLIC_SITEMINA
        volumeMounts:
        - mountPath: /var/log/LAMP/
          name: lamp-volume
        - mountPath: /etc/localtime
          name: timezone-config
        securityContext:
          privileged: true
        livenessProbe:
          httpGet:
            path: /api/be/common/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/be/common/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "1250Mi"
          limits:
            memory: "1250Mi"
      nodeSelector:
        ktis-node: "true"
      volumes:
      - name: lamp-volume
        hostPath:
          # directory location on host
          path: /var/log/vivaldi/LAMP/
          # this field is optional
          type: DirectoryOrCreate
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
        name: timezone-config

  - replicaCount: 1
    name: be-pay
    version: 1.0.0
    spec:
      hostAliases:
      - ip: "172.31.30.238"
        hostnames:
        - "int-in.tbapi.kt.com"
      - ip: "172.31.30.33"
        hostnames:
        - "cus-in.tbapi.kt.com"
      - ip: "172.31.30.32"
        hostnames:
        - id.tbapi.kt.com
      containers:
      - name: be-pay
        image: docker-registry.default.svc.cluster.local:5000/dev-dtplatform/dt-be-pay:latest
        imagePullPolicy: "Always"
        ports:
         - name: http
           containerPort: 8080
        env:
         - name: spring.profiles.active
           value: dev
         - name: NODE_IP
           valueFrom:
             fieldRef:
               fieldPath: status.hostIP
         - name: DB_PWD
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: DB_PWD
         - name: CRIS_SYS_KEY
           valueFrom:
             secretKeyRef:
               name: vivaldi-secret
               key: CRIS_SYS_KEY
        volumeMounts:
        - mountPath: /var/log/LAMP/
          name: lamp-volume
        - mountPath: /etc/localtime
          name: timezone-config
        securityContext:
          privileged: true
        livenessProbe:
          httpGet:
            path: /api/be/pay/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/be/pay/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "1250Mi"
          limits:
            memory: "1250Mi"
      nodeSelector:
        ktis-node: "true"
      volumes:
      - name: lamp-volume
        hostPath:
          # directory location on host
          path: /var/log/vivaldi/LAMP/
          # this field is optional
          type: DirectoryOrCreate
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
        name: timezone-config

  - replicaCount: 1
    name: fe-chat
    version: 1.0.0
    spec:
      containers:
      - name: fe-chat
        image: docker-registry.default.svc.cluster.local:5000/dev-dtplatform/dt-fe-chat:latest
        imagePullPolicy: "Always"
        ports:
         - name: http
           containerPort: 8080
        env:
         - name: spring.profiles.active
           value: dev
         - name: NODE_IP
           valueFrom:
             fieldRef:
               fieldPath: status.hostIP
        volumeMounts:
        - mountPath: /var/log/LAMP/
          name: lamp-volume
        - mountPath: /etc/localtime
          name: timezone-config
        securityContext:
          privileged: true
#        livenessProbe:
#          httpGet:
#            path: /
#            port: 8080
#          initialDelaySeconds: 30
#          periodSeconds: 10
#        readinessProbe:
#          httpGet:
#            path: /
#            port: 8080
#          initialDelaySeconds: 30
#          periodSeconds: 10
        resources:
          requests:
            memory: "1250Mi"
          limits:
            memory: "1250Mi"
      nodeSelector:
        ktis-node: "true"
      volumes:
      - name: lamp-volume
        hostPath:
          # directory location on host
          path: /var/log/vivaldi/LAMP/
          # this field is optional
          type: DirectoryOrCreate
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
        name: timezone-config

  - replicaCount: 1
    name: fe-web
    version: 1.0.0
    spec:
      containers:
      - name: fe-web
        image: ktis-bastion01.container.ipc.kt.com:5000/dev-dtplatform/dt-web:latest
        imagePullPolicy: "Always"
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - mountPath: /var/log/LAMP/
          name: lamp-volume
        - mountPath: /etc/localtime
          name: timezone-config
        securityContext:
          privileged: true
#        livenessProbe:
#          httpGet:
#            path: /
#            port: 80
#          initialDelaySeconds: 30
#          periodSeconds: 10
#        readinessProbe:
#          httpGet:
#            path: /
#            port: 80
#          initialDelaySeconds: 30
#          periodSeconds: 10
        resources:
          requests:
            memory: "512Mi"
          limits:
            memory: "512Mi"
      nodeSelector:
        ktis-node: "true"
      volumes:
      - name: lamp-volume
        hostPath:
          # directory location on host
          path: /var/log/vivaldi/LAMP
          # this field is optional
          type: DirectoryOrCreate
      - hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
        name: timezone-config

##=========================================================================================###
    


##=(ingress values 작성영역)===============================================================###
## ingress values 작성영역
## 구성단위(web)의 외부 expose에 대한 설정.
## web 서버만 외부 접근되는 형태로 구성됨.
##
## enabled: 설정적용 유무 
## path: content-root path
## serviceName: 외부접근으로 내부로 연계할 service 명칭. service 구성에서 명시한 web service 기술.
##              default: web 예) web, web-application
## hosts: 외부 제공 도메인 명칭.(발급된 DNS 인증서가 존재하면, 해당 명칭)
##        예) abc.container.ipc.kt.com
## ----------                 -----------------------------------                ---------- ##
## ----------                 -----------------------------------                ---------- ##
ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /fe/chat
  serviceName: fe-chat
  hosts:
    - dev2.dt.kt.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
##=========================================================================================###



##=(route values 작성영역)===============================================================###
## route values 작성영역
## ingress 와 route 중에 하나만 선택해서 설정해야 하며, istio를 사용하는 경우 route 만 설정.
## 참고로, ingress를 설정하면, 자동으로 route가 생성됨. route는 단건씩만 생성가능.
##
## enabled: 설정적용 유무 
## path: content-root path
## serviceName: 외부접근으로 내부로 연계할 service 명칭. service 구성에서 명시한 web service 기술.
##              default: web 예) web, web-application
## host: 외부 제공 도메인 명칭.(발급된 DNS 인증서가 존재하면, 해당 명칭)
##        예) abc.container.ipc.kt.com
## tls: 인증서 key 설정
## ----------                 -----------------------------------                ---------- ##
## ----------                 -----------------------------------                ---------- ##
route:
  enabled: false
  annotations: {}
  path: /
  serviceName: fe-chat
  host: dev2.dt.kt.com
  tls: []
  #  - secretName: chart-example1-tls
  #  - secretName: chart-example2-tls
##=========================================================================================###



##=(istio values 작성영역)=================================================================###
## istio values 작성영역
##
## enabled: 설정적용 유무
## destination: 적용대상 service 명칭
## version: v1, v2 각각에 대한 이미지 버전
## weight: canary 를 고려한 weight
## legacy:
##   hosts: istio -> non-istio 호출 시에 필요한 non-istio service의 destination rule 생성.
##          예) DB(내 외부 포함), Redis 등
##          참고) istio 1.1.1 이전까지는 redis가 동작되지 않음. 따라서 redis 관련 pod는 일반으로 설정해야 함.
## ----------                 -----------------------------------                ---------- ##
## ----------                 -----------------------------------                ---------- ##
istio:
  enabled: false
  destination:
    host: simple02-web
    v1:
      version: 2.0.0
      weight: 50
    v2:
      version: 2.1.0
      weight: 50
    legacy:
      hosts:
        - simple02-was
        - simple02-postgresql
##=========================================================================================###
