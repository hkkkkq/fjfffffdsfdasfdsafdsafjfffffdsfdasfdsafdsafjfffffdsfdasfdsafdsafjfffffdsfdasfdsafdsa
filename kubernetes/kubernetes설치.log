[계정 생성]
  chage -E -1 -I -1 -m 0 -M 99999 root

  groupadd flexgrp
  useradd -d /home/flex -s /bin/bash -m -g flexgrp flex
  passwd flex
  flex123!
  chage -E -1 -I -1 -m 0 -M 99999 flex




# Master Node

[Installing kubeadm, kebelet, kubectl]

  apt-get update && apt-get install -y apt-transport-https curl

  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

  apt-get update

  apt-get install -y kubelet kubeadm kubectl

  apt-mark hold kubelet kubeadm kubectl



[Initializing your control-plane node]

  kubeadm init

  =>

  our Kubernetes control-plane has initialized successfully!

  To start using your cluster, you need to run the following as a regular user:

    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

  You should now deploy a pod network to the cluster.
  Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
    https://kubernetes.io/docs/concepts/cluster-administration/addons/

  Then you can join any number of worker nodes by running the following on each as root:

  kubeadm join 172.16.51.167:6443 --token refs8g.0f43g51384xfa6qw \
    --discovery-token-ca-cert-hash sha256:957a5a5f49051459bd5df39d67d34b4de850ac2a1c3b8b7964cad94ad997dc10



[To make kubectl work for your non-root user]

  su -l flex

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

[Alternatively, if you are the root user, you can run]

  export KUBECONFIG=/etc/kubernetes/admin.conf

  # 만약 Worker Node 인 경우 Master Node에서 대상 파일을 가져온다.
  cd /etc/kubernetes
  scp root@172.16.51.167:/etc/kubernetes/admin.conf .



[Installing a pod network add-on]

  kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml





# Workder Node

[Installing kubeadm, kebelet, kubectl]

  apt-get update && apt-get install -y apt-transport-https curl

  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

  apt-get update

  apt-get install -y kubelet kubeadm kubectl

  apt-mark hold kubelet kubeadm kubectl



[Joining your nodes]

  kubeadm join 172.16.51.167:6443 --token refs8g.0f43g51384xfa6qw \
    --discovery-token-ca-cert-hash sha256:957a5a5f49051459bd5df39d67d34b4de850ac2a1c3b8b7964cad94ad997dc10



[token은 24시간 후 만료된다. master node에서 재 확인 및 재 발행 가능하다.]

  kubeadm token list
  kubeadm token create

[discovery-token-ca-cert-hash의 경우  master node에서 재 확인 가능하다.]

  openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | \
   openssl dgst -sha256 -hex | sed 's/^.* //'






[kubernetes 초기화]

kubeadm reset
apt-get purge kubeadm kubectl kubelet kubernetes-cni kube*   
apt-get autoremove  
rm -rf ~/.kube
systemctl daemon-reload


[Enable kubectl autocompletion]

1. apt-get install bash-completion
=> /usr/share/bash-completion/bash-completion

2. .bashrc 또는 .bash_profile 추가
source <(kubectl completion bash)
alias k='kubectl'
alias kd='kubectl -n default'
alias kk='kubectl -n kube-system'
alias kf='kebectl -n flex'
complete -F __start_kubectl k kd kk kf