[설치-인터넷 안되는 경우]

 #1. git 최신 버전 설치 
 yum remove git
 
 https://github.com/git/git/archive/v2.22.0.tar.gz
 tar -xvf git-2.22.0.tar.gz
 cd git-2.22.0
 make configure
  ./configure --prefix=/app/git/git-2.22.0
 make
 make install
 
 --------------- 컴파일 에러 발생하는 경우 참조
 yum install openssl-devel
 yum install curl-devel
 yum install expat-devel

vi  .bash_profile
export PATH=$JAVA_HOME/bin:$PATH:/root/downloads/git-2.22.0


#2. 사전 필수 확인 및 설치
yum install curl policycoreutils openssh-server openssh-clients 
systemctl enable sshd 
systemctl start sshd 
yum install postfix 
systemctl enable postfix 
systemctl start postfix 


#3. gitlab-ce rpm 파일 다운로드 
https://packages.gitlab.com/gitlab/gitlab-ce/gitlab-ce-12.7.2-ce.0.el7.x86_64.rpm


#4. root 계정으로
yum install gitlab-ce-12.7.2-ce.0.el7.x86_64.rpm

#5. 관련 디렉토리
/opt/gitlab: gitlab 설치 디렉토리
/var/opt/gitlab : gitlab 디렉토리
/var/log/gitlab : gitlab 로그 디렉토리
/etc/gitlab : gitlab 설정파일 디렉토리
/data/gitlab/git-data : 데이터 디렉토리 (default: /var/opt/gitlab/git-data)

#6. vi /etc/gitlab/gitlab.rb

# (중요) gitlab은 기본적으로 80포트를 사용하고 인증 관련된 부분은 8080포트를 사용합니다. gitlab의 경우 15개 SW가 패키징되는 만큼 포트 충돌여부를 확인한다.

#6.1 gitlab페이지가 보여지는 웹사이트 url로 방화벽 오픈 대상(디폴트 80)
external_url 'http://172.17.254.11:8001'

#6.2 기본 인증 관련 내부 포트(디폴트 8080)로 방화벽 작업 대상은 아님. 만약 8080 사용 중이면 두군데 주석 제거 후 수정
gitlab_workhorse['auth_backend'] = "http://localhost:9081"
unicorn['port'] = 9081
 
 #6. 위 설정 변경사항에 대한 반영 
 gitlab-ctl reconfigure
 
 #7. 참고 스크립트
gitlab-ctl start
gitlab-ctl stop
gitlab-ctl restart
gitlab-ctl reconfigure : gitlab 설정파일 변경 후 재 구성 필요 시
 
 #8. 디폴드 어드민 계정은 root


-------------------------------------------------------------------------

[설치-인터넷 되는 경우]

 #1. git 최신 버전 설치 
 yum remove git
 yum install http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-1.noarch.rpm
 yum list git*
 yum install git-2.22.0-1.WANdisco.437
 
 #2. 사전 필수 확인 및 설치
yum install curl policycoreutils openssh-server openssh-clients 
systemctl enable sshd 
systemctl start sshd 
yum install postfix 
systemctl enable postfix 
systemctl start postfix 

#3. yum gitlab_gitlab-ce.repo 추가
curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash

#4. yum 설치 (gitlab-ce.x86_64 0:12.2.5-ce.0.el7)
yum install gitlab-ce

#5. 관련 디렉토리
/opt/gitlab : gitlab 설치 디렉토리
/var/opt/gitlab : gitlab 디렉토리
/var/log/gitlab : gitlab 로그 디렉토리
/etc/gitlab : gitlab 설정파일 디렉토리
/data/gitlab/git-data : 데이터 디렉토리 (default: /var/opt/gitlab/git-data)

#6. vi /etc/gitlab/gitlab.rb

# (중요) gitlab은 기본적으로 80포트를 사용하고 인증 관련된 부분은 8080포트를 사용합니다. gitlab의 경우 15개 SW가 패키징되는 만큼 포트 충돌여부를 확인한다.

#6.1 gitlab페이지가 보여지는 웹사이트 url로 방화벽 오픈 대상(디폴트 80)
external_url 'http://172.17.254.11:8001'

#6.2 기본 인증 관련 내부 포트(디폴트 8080)로 방화벽 작업 대상은 아님. 만약 8080 사용 중이면 두군데 주석 제거 후 수정
gitlab_workhorse['auth_backend'] = "http://localhost:9081"
unicorn['port'] = 9081
 
 #6. 위 설정 변경사항에 대한 반영 
 gitlab-ctl reconfigure
 
 #7. 참고 스크립트
gitlab-ctl start
gitlab-ctl stop
gitlab-ctl restart
gitlab-ctl reconfigure : gitlab 설정파일 변경 후 재 구성 필요 시
 
 #8. 디폴드 어드민 계정은 root
 
 -------------------------------------------------------------------------
 
[데이터 저장소 위치 변경]
 
#1. 
# Prevent users from writing to the repositories while you move them.
 gitlab-ctl stop
 
#2.
rsync -av /var/opt/gitlab/git-data/repositories /data/gitlab/git-data/
 
#3. 
 vi /etc/gitlab/gitlab.rb
 git_data_dirs({
   "default" => {
      "path" => "/data/gitlab/git-data"
     }
 })
 
 #4.
 gitlab-ctl reconfigure
 
 #5.
 gitlab-ctl start