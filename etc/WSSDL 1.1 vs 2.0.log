
WSDL 1.1 vs WSDL 2.0
Posted: March 12, 2012 in SOA, WSDL	
 
0


The Web Services Description Language (WSDL) is an XML-based language that is used for

describing the web services. Each web service is defined by one WSDL. The earlier version was WSDL 1.1

and the current version is WSDL 2.0.


According to WS-I Basic Profile 1.1, we need to use SOAP 1.1, WSDL 1.1 and UDDI 2.0 to build

the web services for the sake of interoperability. The WS-I group has come up with two more new

versions of Basic Profile. The WS-I Basic Profile 1.2 (9th Nov, 2010) specifies the usage of SOAP 1.1, WSDL

1.1, UDDI 2.0, WS-Addressing 1.0 and MTOM. The WS-I Basic Profile 2.0 (9th Nov, 2010) specifies the

usage of SOAP 1.2, WSDL 1.1, UDDI 2.0, WS-Addressing and MTOM.


WSDL 2.0 was designed to solve the interoperability issues found in WSDL 1.0/1.1. But we find

very few vendors who support WSDL 2.0 today since it is still not completely interoperable. Though the

WSDL 2.0 is not advisable, it is better option when it comes to defining RESTful services. Because RESTful

services can be described fairly with the structure supported by WSDL 2.0. But again when we think of

interoperability, we hit lot of issues with WSDL 2.0. Instead, the RESTful services could also be defined

using WADL (Web Application Description Language).


Anyways, following are the differences between WSDL1.1 and WSDL 2.0 :

WSDL 1.1 WSDL 2.0 
<definitions> <description> 
<portType> <interface> 
<port> <endpoint> 
<message> <message> is removed and defined inside <operation> 


Following is the sample of a WSDL 2.0 document: <?xml version=¡±1.0¡È encoding=¡±UTF-8¡È?> <description xmlns=¡±http://www.w3.org/ns/wsdl¡± xmlns:tns=¡±http://www.abc.com/wsdl20sample¡± xmlns:whttp=¡±http://schemas.xmlsoap.org/wsdl/http/¡± xmlns:wsoap=¡±http://schemas.xmlsoap.org/wsdl/soap/¡± targetNamespace=¡±http://www.abc.com/wsdl20sample¡±> &lt;!? Abstract type ?> <types> definition of types </types> <!? Abstract interfaces ?> <interface name=¡±RESTfulInterface¡±> <fault name=¡±ClientError¡± element=¡±tns:response¡±/> <fault name=¡±ServerError¡± element=¡±tns:response¡±/> <fault name=¡±Redirection¡± element=¡±tns:response¡±/> <operation name=¡±Get¡± pattern=¡±http://www.w3.org/ns/wsdl/in-out¡±> <input messageLabel=¡±In¡± element=¡±tns:request¡±/> <output messageLabel=¡±Out¡± element=¡±tns:response¡±/> </operation> <operation name=¡±Post¡± pattern=¡±http://www.w3.org/ns/wsdl/in-out¡±> <input messageLabel=¡±In¡± element=¡±tns:request¡±/> <output messageLabel=¡±Out¡± element=¡±tns:response¡±/> </operation> <operation name=¡±Put¡± pattern=¡±http://www.w3.org/ns/wsdl/in-out¡±> <input messageLabel=¡±In¡± element=¡±tns:request¡±/> <output messageLabel=¡±Out¡± element=¡±tns:response¡±/> </operation> <operation name=¡±Delete¡± pattern=¡±http://www.w3.org/ns/wsdl/in-out¡±> <input messageLabel=¡±In¡± element=¡±tns:request¡±/> <output messageLabel=¡±Out¡± element=¡±tns:response¡±/> </operation> </interface> <!? Concrete Binding Over HTTP ?> <binding name=¡±RESTfulInterfaceHttpBinding¡± interface=¡±tns:RESTfulInterface¡± type=¡±http://www.w3.org/ns/wsdl/http¡±> <operation ref=¡±tns:Get¡± whttp:method=¡±GET¡±/> <operation ref=¡±tns:Post¡± whttp:method=¡±POST¡± whttp:inputSerialization=¡±application/x-www-form-urlencoded¡±/> <operation ref=¡±tns:Put¡± whttp:method=¡±PUT¡± whttp:inputSerialization=¡±application/x-www-form-urlencoded¡±/> <operation ref=¡±tns:Delete¡± whttp:method=¡±DELETE¡±/> </binding> <!? Concrete Binding with SOAP?> <binding name=¡±RESTfulInterfaceSoapBinding¡± interface=¡±tns:RESTfulInterface¡± type=¡±http://www.w3.org/ns/wsdl/soap¡± wsoap:protocol=¡±http://www.w3.org/2003/05/soap/bindings/HTTP/¡± wsoap:mepDefault=¡±http://www.w3.org/2003/05/soap/mep/request-response¡±> <operation ref=¡±tns:Get¡± /> <operation ref=¡±tns:Post¡± /> <operation ref=¡±tns:Put¡± /> <operation ref=¡±tns:Delete¡± /> </binding> <!? Web Service offering endpoints for both bindings?> <service name=¡±RESTfulService¡± interface=¡±tns:RESTfulInterface¡±> <endpoint name=¡±RESTfulServiceHttpEndpoint¡± binding=¡±tns:RESTfulInterfaceHttpBinding¡± address=¡±http://www.example.com/rest/¡±/> <endpoint name=¡±RESTfulServiceSoapEndpoint¡± binding=¡±tns:RESTfulInterfaceSoapBinding¡± address=¡±http://www.example.com/soap/¡±/> </service> </description&gt;
