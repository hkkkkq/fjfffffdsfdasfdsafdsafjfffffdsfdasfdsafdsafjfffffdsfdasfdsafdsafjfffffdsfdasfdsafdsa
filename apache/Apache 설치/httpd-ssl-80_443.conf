#
# This is the Apache server configuration file providing SSL support.
# It contains the configuration directives to instruct the server how to
# serve pages over an https connection. For detailed information about these 
# directives see <URL:http://httpd.apache.org/docs/2.4/mod/mod_ssl.html>
# 
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# Required modules: mod_log_config, mod_setenvif, mod_ssl,
#          socache_shmcb_module (for default value of SSLSessionCache)

#
# Pseudo Random Number Generator (PRNG):
# Configure one or more sources to seed the PRNG of the SSL library.
# The seed data should be of good random quality.
# WARNING! On some platforms /dev/random blocks if not enough entropy
# is available. This means you then cannot use the /dev/random device
# because it would lead to very long connection times (as long as
# it requires to make more entropy available). But usually those
# platforms additionally provide a /dev/urandom device which doesn't
# block. So, if available, use this one instead. Read the mod_ssl User
# Manual for more details.
#
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed startup file:/dev/urandom 512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512


#
# When we also provide SSL we have to listen to the 
# standard HTTP port (see above) and to the HTTPS port
#
Listen 443
#NameVirtualHost *:443

##
##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##

#
##   Some MIME-types for downloading Certificates and CRLs
##
AddType application/x-x509-ca-cert .crt
AddType application/x-pkcs7-crl    .crl

#   SSL Cipher Suite:
#   List the ciphers that the client is permitted to negotiate,
#   and that httpd will negotiate as the client of a proxied server.
#   See the OpenSSL documentation for a complete list of ciphers, and
#   ensure these follow appropriate best practices for this deployment.
#   httpd 2.2.30, 2.4.13 and later force-disable aNULL, eNULL and EXP ciphers,
#   while OpenSSL disabled these by default in 0.9.8zf/1.0.0r/1.0.1m/1.0.2a.
#SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4
#SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4

SSLCipherSuite HIGH:MEDIUM:!MD5!EXP:!NULL:!LOW:!ADH:!aNULL:!RC4
SSLProxyCipherSuite HIGH:MEDIUM:!MD5!EXP:!NULL:!LOW:!ADH:!aNULL:!RC4

SSLHonorCipherOrder on 

SSLProtocol all -SSLv3 -SSLv2
SSLProxyProtocol all -SSLv3 -SSLv2

#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program (`builtin' is an internal
#   terminal dialog) has to provide the pass phrase on stdout.
#SSLPassPhraseDialog  builtin
SSLPassPhraseDialog exec:/apache/apache24/conf/extra/passwd_443.sh

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First the mechanism 
#   to use and second the expiring timeout (in seconds).
#SSLSessionCache         "dbm:/apache/apache24/logs/ssl_scache"
SSLSessionCache        "shmcb:/apache/apache24/logs/ssl_scache(512000)"
SSLSessionCacheTimeout  300

#   OCSP Stapling (requires OpenSSL 0.9.8h or later)
#
#   This feature is disabled by default and requires at least
#   the two directives SSLUseStapling and SSLStaplingCache.
#   Refer to the documentation on OCSP Stapling in the SSL/TLS
#   How-To for more information.
#
#   Enable stapling for all SSL-enabled servers:
#SSLUseStapling On

#   Define a relatively small cache for OCSP Stapling using
#   the same mechanism that is used for the SSL session cache
#   above.  If stapling is used with more than a few certificates,
#   the size may need to be increased.  (AH01929 will be logged.)
#SSLStaplingCache "shmcb:/apache/apache24/logs/ssl_stapling(32768)"

#   Seconds before valid OCSP responses are expired from the cache
#SSLStaplingStandardCacheTimeout 3600

#   Seconds before invalid OCSP responses are expired from the cache
#SSLStaplingErrorCacheTimeout 600

##
## SSL Virtual Host Context
##
SetEnvIf Request_URI "favicon.ico" do_not_log
LogFormat "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b %T \"%{Referer}i\" \"%{User-Agent}i\"" ssl_common

<VirtualHost _default_:443>

    DocumentRoot "/apache/apache24/www_kkos"
    ServerName dev.k-kos.kt.com
    #ServerAdmin you@example.com
    ErrorLog "|/apache/apache24/bin/rotatelogs /ap_log/ssl/dev.k-kos.kt.com.error-443.%Y%m%d.log 86400"
    TransferLog "|/apache/apache24/bin/rotatelogs /ap_log/ssl/dev.k-kos.kt.com.access-443.%Y%m%d.log 86400"

    <Directory "/apache/apache24/www_kkos">
        Options -Indexes -FollowSymLinks
        AllowOverride AuthConfig
        Require all granted
    </Directory>

#   SSL Engine Switch:
#   Enable/Disable SSL for this virtual host.
    SSLEngine on
    SSLCertificateFile "/apache/apache24/ssl_private/kkos/server_kkos_dev_test.crt"
    SSLCertificateKeyFile "/apache/apache24/ssl_private/kkos/server_kkos_dev_test.key"
    #SSLCertificateChainFile "/apache/apache24/ssl_private/server-ca.crt"
    #SSLCACertificatePath "/apache/apache24/ssl_private/ssl.crt"
    #SSLCACertificateFile "/apache/apache24/ssl_private/ssl.crt/ca-bundle.crt"

    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory "/apache/apache24/cgi-bin">
        SSLOptions +StdEnvVars
    </Directory>

    BrowserMatch "MSIE [2-5]" \
    nokeepalive ssl-unclean-shutdown \
    downgrade-1.0 force-response-1.0

    CustomLog "|/apache/apache24/bin/rotatelogs /ap_log/ssl/dev.k-kos.kt.com.request-443.%Y%m%d.log 86400" ssl_common

    #JkMount /*.jsp wlb
    #JkMount /*.do wlb

    JkMount /KKOS/* kkosSvr11
    JkUnMount /KKOS/resources/* kkosSvr11


</VirtualHost>
