[debug] Created tunnel using local port: '45341'

[debug] SERVER: "127.0.0.1:45341"

[debug] Original chart version: ""
[debug] CHART PATH: /home/bsscoe/song/helm/chart/kibana

NAME:   kibana
REVISION: 1
RELEASED: Mon Mar 18 13:10:12 2019
CHART: kibana-2.0.0
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
authProxyEnabled: false
commandline:
  args: []
dashboardImport:
  dashboards: {}
  enabled: false
  timeout: 60
  xpackauth:
    enabled: false
    password: mypass
    username: myuser
deployment:
  annotations: {}
env: {}
extraConfigMapMounts: []
extraContainers: ""
extraVolumeMounts: []
extraVolumes: []
files:
  kibana.yml:
    elasticsearch.url: http://elasticsearch:9200
    server.host: "0"
    server.name: kibana
image:
  pullPolicy: IfNotPresent
  repository: docker.elastic.co/kibana/kibana-oss
  tag: 6.6.1
ingress:
  enabled: false
initContainers: {}
livenessProbe:
  enabled: false
  initialDelaySeconds: 30
  timeoutSeconds: 10
nodeSelector: {}
persistentVolumeClaim:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: false
  existingClaim: false
  size: 5Gi
plugins:
  enabled: false
  reset: false
  values: null
podAnnotations: {}
podLabels: {}
priorityClassName: ""
readinessProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 5
  timeoutSeconds: 10
replicaCount: 1
resources: {}
revisionHistoryLimit: 3
securityContext:
  allowPrivilegeEscalation: false
  enabled: false
  fsGroup: 2000
  runAsUser: 1000
service:
  annotations: {}
  externalPort: 443
  internalPort: 5601
  labels: {}
  selector: {}
  type: ClusterIP
serviceAccount:
  create: false
  name: null
tolerations: []

HOOKS:
MANIFEST:

---
# Source: kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana
  labels:
    app: kibana
    chart: "kibana-2.0.0"
    release: kibana
    heritage: Tiller
data:
  kibana.yml: |
    elasticsearch.url: http://elasticsearch:9200
    server.host: "0"
    server.name: kibana
---
# Source: kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
    chart: kibana-2.0.0
    release: kibana
    heritage: Tiller
  name: kibana
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5601
      protocol: TCP

  selector:
    app: kibana
    release: kibana
---
# Source: kibana/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: kibana
    chart: "kibana-2.0.0"
    heritage: Tiller
    release: kibana
  name: kibana
spec:
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      annotations:
        checksum/config: e97f89f3a2d3bbb26a265ed2dd187723c9a19d369536c76a5ab88138ead33f64
      labels:
        app: kibana
        release: "kibana"
    spec:
      serviceAccountName: default
      containers:
      - name: kibana
        image: "docker.elastic.co/kibana/kibana-oss:6.6.1"
        imagePullPolicy: IfNotPresent
        env:
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        resources:
          {}
        volumeMounts:
        - name: kibana
          mountPath: "/usr/share/kibana/config/kibana.yml"
          subPath: kibana.yml
      tolerations:
        []
      volumes:
        - name: kibana
          configMap:
            name: kibana
